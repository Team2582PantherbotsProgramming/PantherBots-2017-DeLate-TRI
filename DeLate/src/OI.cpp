// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ChangeBoxPosition.h"
#include "Commands/ChangeIntakePosition.h"
#include "Commands/Climb.h"
#include "Commands/Intake.h"
#include "Commands/JoyDrive.h"
#include "Commands/LowerB.h"
#include "Commands/LowerI.h"
#include "Commands/Outtake.h"
#include "Commands/RaiseB.h"
#include "Commands/RaiseI.h"
#include "Commands/AutoGearIntake.h"
#include "Commands/AutoGearPickup.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    gamepad.reset(new Joystick(1));
    
    button6.reset(new JoystickButton(gamepad.get(), 3));
    button6->WhenPressed(new ChangeBoxPosition());
    button5.reset(new JoystickButton(gamepad.get(), 8));
    button5->WhenPressed(new ChangeIntakePosition());
    button4.reset(new JoystickButton(gamepad.get(), 4));
    button4->WhileHeld(new Outtake());
    button3.reset(new JoystickButton(gamepad.get(), 1));
    button3->WhileHeld(new Intake());
    button2.reset(new JoystickButton(gamepad.get(), 2));
    button2->WhenPressed(new AutoGearPickup());
    button1.reset(new JoystickButton(gamepad.get(), 7));
    button1->WhileHeld(new Climb());
    joy.reset(new Joystick(0));
    

    // SmartDashboard Buttons
    /*
    SmartDashboard::PutData("ChangeBoxPosition", new ChangeBoxPosition());
    SmartDashboard::PutData("ChangeIntakePosition", new ChangeIntakePosition());
    SmartDashboard::PutData("Climb", new Climb());
    SmartDashboard::PutData("LowerB", new LowerB());
    SmartDashboard::PutData("RaiseB", new RaiseB());
    SmartDashboard::PutData("LowerI", new LowerI());
    SmartDashboard::PutData("RaiseI", new RaiseI());
    SmartDashboard::PutData("Outtake", new Outtake());
    SmartDashboard::PutData("Intake", new Intake());
    SmartDashboard::PutData("JoyDrive", new JoyDrive());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    SmartDashboard::PutData("AutoIntake", new AutoGearIntake());
    SmartDashboard::PutData("Complete Gear Pickup(TBT)", new AutoGearPickup());
*/
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
std::shared_ptr<Joystick> OI::getJoy() {
   return joy;
}

std::shared_ptr<Joystick> OI::getGamepad() {
   return gamepad;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
